= simple_form_for @funds_transfer_customer, :html => {:class=>'form-horizontal', :autocomplete=>"off", :id => "funds_transfer_customer_form"} do |f|
  .control-group
    = f.label ' '
    #msg-error
      = error_message_for(@funds_transfer_customer, :base, :prepend_text => "")
  .form-main
    = f.hidden_field :lock_version
    = f.hidden_field :approved_id
    = f.hidden_field :approved_version
    .control-group
      = f.label :intelligent_routing_check, "Intelligent Routing?", :class => 'control-label'
      = f.check_box :intelligent_routing_check, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :neft_limit_check, :prepend_text => "")
    .control-group
      = f.label :neft_limit_check, "Neft Limit Check", :class => 'control-label'
      = f.check_box :neft_limit_check, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :neft_limit_check, :prepend_text => "")
    .control-group
      = f.label :action_limit_breach, "Action On Limit Breach", :class => 'control-label'
      = f.select :action_limit_breach, [['Process','P'],['Reject','R']], {:include_blank => 'Select Action'}
      #msg-error
        = error_message_for(@funds_transfer_customer, :action_limit_breach, :prepend_text => "")       
    .control-group
      = f.label :working_day_limit, "Working Day Limit", :class => 'control-label'
      = f.text_field :working_day_limit, :maxlength => 20, :class => 'numbers'
      #msg-error
        = error_message_for(@funds_transfer_customer, :working_day_limit, :prepend_text => "")
    .control-group
      = f.label :non_working_day_limit, "Non Working Day Limit", :class => 'control-label'
      = f.text_field :non_working_day_limit, :maxlength => 20, :class => 'numbers'
      #msg-error
        = error_message_for(@funds_transfer_customer, :non_working_day_limit, :prepend_text => "")
    .control-group
      = f.label :enabled, "Enabled ?", :class => 'control-label'
      = f.check_box :enabled, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :enabled, :prepend_text => "")
    .control-group
      = f.label :app_id, "*App ID", :class => 'control-label'
      = f.text_field :app_id, :maxlength => 20
      #msg-error
        = error_message_for(@funds_transfer_customer, :app_id, :prepend_text => "")
    .control-group
      = f.label :category, "Category", :class => 'control-label'
      = f.select :category, ['Master'], {:include_blank => 'Select Category'}
      #msg-error
        = error_message_for(@funds_transfer_customer, :category, :prepend_text => "")
    .control-group
      = f.label :is_retail, "Retail ?", :class => 'control-label'
      = f.check_box :is_retail, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :is_retail, :prepend_text => "")
    .control-group
      = f.label :customer_id, "*Customer ID", :class => 'control-label'
      - if f.object.is_retail == 'Y'
        = f.text_field :customer_id, :disabled => true, :maxlength => 10
      - else
        = f.text_field :customer_id, :maxlength => 10
      #msg-error
        = error_message_for(@funds_transfer_customer, :customer_id, :prepend_text => "")
    .control-group
      = f.label :use_std_relns, "Use Standard Relationships ?", :class => 'control-label'
      - if f.object.allowed_relns.empty? && f.object.use_std_relns.nil?
        = f.check_box :use_std_relns, {checked: true},"Y","N"
      - else
        = f.check_box :use_std_relns, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :use_std_relns, :prepend_text => "")
    .control-group
      = f.label :allowed_relns, "Allowed Relationships", :class => 'control-label', :id => "allowed_relns_lbl"
      = f.select :allowed_relns, options_for_select(FundsTransferCustomer::RELATIONS, f.object.allowed_relns), {}, {multiple: true}
      #msg-error
        = error_message_for(@funds_transfer_customer, :allowed_relns, :prepend_text => "")
    .control-group
      = f.label :name, "*Name", :class => 'control-label'
      = f.text_field :name, :maxlength => 100, :style => "width: 400px;"
      #msg-error
        = error_message_for(@funds_transfer_customer, :name, :prepend_text => "")
    .control-group
      = f.label :reply_with_bene_name, "Reply With Beneficicary Name ?", :class => 'control-label'
      = f.check_box :reply_with_bene_name, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :reply_with_bene_name, :prepend_text => "")
    .control-group
      = f.label :low_balance_alert_at, "*Low Balance Alert At", :class => 'control-label'
      = f.text_field :low_balance_alert_at
      #msg-error
        = error_message_for(@funds_transfer_customer, :low_balance_alert_at, :prepend_text => "")
    .control-group
      = f.label :identity_user_id, "*User Identity", :class => 'control-label'
      = f.text_field :identity_user_id, :maxlength => 20
      #msg-error
        = error_message_for(@funds_transfer_customer, :identity_user_id, :prepend_text => "")
    .control-group
      = f.label :allow_neft, "NEFT Allowed ?", :class => 'control-label'
      = f.check_box :allow_neft, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :allow_neft, :prepend_text => "")
    .control-group
      = f.label :allow_imps, "IMPS Allowed ?", :class => 'control-label'
      = f.check_box :allow_imps, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :allow_imps, :prepend_text => "")
    .control-group
      = f.label :allow_rtgs, "RTGS Allowed ?", :class => 'control-label'
      = f.check_box :allow_rtgs, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :allow_rtgs, :prepend_text => "")
    .control-group
      = f.label :allow_apbs, "APBS Allowed ?", :class => 'control-label'
      = f.check_box :allow_apbs, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :allow_apbs, :prepend_text => "")
    .control-group
      = f.label :apbs_user_no, "APBS User No", :class => 'control-label'
      = f.text_field :apbs_user_no, :minlength => 7, :maxlength => 7
      #msg-error
        = error_message_for(@funds_transfer_customer, :apbs_user_no, :prepend_text => "")
    .control-group
      = f.label :apbs_user_name, "APBS Username", :class => 'control-label'
      = f.text_field :apbs_user_name
      #msg-error
        = error_message_for(@funds_transfer_customer, :apbs_user_name, :prepend_text => "")
    .control-group
      = f.label :needs_purpose_code, "Needs Purpose Code ?", :class => 'control-label'
      = f.check_box :needs_purpose_code, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :needs_purpose_code, :prepend_text => "")
    .control-group
      = f.label :allow_all_accounts, "Allow All Accounts ?", :class => 'control-label'
      = f.check_box :allow_all_accounts, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :allow_all_accounts, :prepend_text => "")
    .control-group
      = f.label :is_filetoapi_allowed, "FiletoApi Allowed ?", :class => 'control-label'
      = f.check_box :is_filetoapi_allowed, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :is_filetoapi_allowed, :prepend_text => "")
    .control-group
      = f.label :notify_on_status_change, "Notify On Status Change ?", :class => 'control-label'
      = f.check_box :notify_on_status_change, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :notify_on_status_change, :prepend_text => "")
    .control-group
      = f.label :notify_app_code, "Notify App Code", :class => 'control-label', :id => "notify_app_code_lbl"
      = f.select(:notify_app_code, options_for_notify_app_code, prompt: 'Select')
      #msg-error
        = error_message_for(@funds_transfer_customer, :notify_app_code, :prepend_text => "")
    .control-group
      = f.label :force_saf, "Force Store & Forward ?", :class => 'control-label'
      = f.check_box :force_saf, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :force_saf, :prepend_text => "")
    .control-group
      = f.label :bene_backend, "Beneficiary Backend", :class => 'control-label', :id => "notify_app_code_lbl"
      = f.select :bene_backend, options_for_select(FundsTransferCustomer::BENE_BACKENDS, @funds_transfer_customer.bene_backend), prompt: 'Select'
      #msg-error
        = error_message_for(@funds_transfer_customer, :bene_backend, :prepend_text => "")
    .control-group
      = f.label :is_bulk, "Is Bulk ?", :class => 'control-label'
      = f.check_box :is_bulk, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :is_bulk, :prepend_text => "")

    .control-group
      = f.label :btid, "BTID", :class => 'control-label'
      = f.text_field :btid, :maxlength => 50, :style => "width: 400px;"
      #msg-error
        = error_message_for(@funds_transfer_customer, :btid, :prepend_text => "")

    .control-group
      = f.label :customer_code, "Customer Code", :class => 'control-label'
      = f.text_field :customer_code, :maxlength => 20
      #msg-error
        = error_message_for(@funds_transfer_customer, :customer_code, :prepend_text => "")
    .control-group
      = f.label :ft_2f_enabled, "FT 2FA Enabled", :class => 'control-label'
      = f.select :ft_2f_enabled, [['No','N'],['YES','Y']] 
      #msg-error
        = error_message_for(@funds_transfer_customer, :ft_2f_enabled, :prepend_text => "")
    .control-group
      = f.label :ft_2f_method, "FT 2FA Method", :class => 'control-label'
      = f.select :ft_2f_method, [['STP','STP'],['CONSOLE','CONSOLE']],{},{:disabled => true}
      #msg-error
        = error_message_for(@funds_transfer_customer, :ft_2f_method, :prepend_text => "")
    .control-group
      = f.label :bulk_backend, "Bulk Backend", :class => 'control-label'
      = f.select :bulk_backend, [['IGTB','IGTB'],['CNB','CNB']], {:include_blank => 'Select Bulk Backend'}
      #msg-error
        = error_message_for(@funds_transfer_customer, :bulk_backend, :prepend_text => "")        
    .control-group
      = f.label :beneficiary_sms_allowed, "Beneficiary SMS Allowed ?", :class => 'control-label'
      = f.check_box :beneficiary_sms_allowed, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :beneficiary_sms_allowed, :prepend_text => "")

    .control-group
      = f.label :beneficiary_email_allowed, "Beneficiary EMAIL Allowed ?", :class => 'control-label'
      = f.check_box :beneficiary_email_allowed, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :beneficiary_email_allowed, :prepend_text => "")  

    .control-group
      = f.label :n10_notification_enabled, "Credit Confirmation ?", :class => 'control-label'
      = f.check_box :n10_notification_enabled, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :n10_notification_enabled, :prepend_text => "")
    .control-group
      = f.label :notify_downtime, "Notify DownTime?", :class => 'control-label'
      = f.check_box :notify_downtime, {},"Y","N"
      #msg-error
        = error_message_for(@funds_transfer_customer, :notify_downtime, :prepend_text => "")    

  .form-actions
    - (f.object.new_record? and f.object.app_id.nil?) ? label_name = "Create" : label_name = "Update"
    = f.button "submit" ,:class=>"btn btn-primary", :id => 'submit_customer', :value => label_name + ' Funds Transfer Customer'
    = link_to :Cancel,'/funds_transfer_customers', :name => 'cancel', :class=>"cancel btn"



  :javascript

    $(document).ready(function(){
      $.ajax({
        type: 'GET',
        url: "/funds_transfer_customers/validate_app_id_customer_id_ft_customer",
        data: { app_id: $("#funds_transfer_customer_app_id").val(),customer_id: $("#funds_transfer_customer_customer_id").val()},
        success: function(data){
          $("#funds_transfer_customer_category").attr('readonly', false);
          $("#funds_transfer_customer_category").css("pointer-events","auto");
        },
        error: function(error) {
          $('#funds_transfer_customer_category').val('');
          $("#funds_transfer_customer_category").attr('readonly', 'readonly');
          $("#funds_transfer_customer_category").css("pointer-events","none");
        }
      });
    });

    $("#funds_transfer_customer_app_id,#funds_transfer_customer_customer_id").change(function(){
      $.ajax({
        type: 'GET',
        url: "/funds_transfer_customers/validate_app_id_customer_id_ft_customer",
        data: { app_id: $("#funds_transfer_customer_app_id").val(),customer_id: $("#funds_transfer_customer_customer_id").val()},
        success: function(data){
          $("#funds_transfer_customer_category").attr('readonly', false);
          $("#funds_transfer_customer_category").css("pointer-events","auto");
        },
        error: function(error) {
          $('#funds_transfer_customer_category').val('');
          $("#funds_transfer_customer_category").attr('readonly', 'readonly');
          $("#funds_transfer_customer_category").css("pointer-events","none");
        }
      });
    });

    if ($("#funds_transfer_customer_neft_limit_check").is(':checked')){
        $("#funds_transfer_customer_working_day_limit").prop("disabled", false);
        $("#funds_transfer_customer_non_working_day_limit").prop("disabled", false);
        $("#funds_transfer_customer_action_limit_breach").prop("disabled", false);

      } 
    else{
        $("#funds_transfer_customer_working_day_limit").attr("value", "");
        $("#funds_transfer_customer_non_working_day_limit").attr("value", "");
         $("#funds_transfer_customer_action_limit_breach").prop("value", "");

        $("#funds_transfer_customer_working_day_limit").prop("disabled", true);
        $("#funds_transfer_customer_non_working_day_limit").prop("disabled", true);
        $("#funds_transfer_customer_action_limit_breach").prop("disabled", true);

      }

    $("#funds_transfer_customer_neft_limit_check").click(function () {
      if ($("#funds_transfer_customer_neft_limit_check").is(':checked')){
        $("#funds_transfer_customer_working_day_limit").prop("disabled", false);
        $("#funds_transfer_customer_non_working_day_limit").prop("disabled", false);
        $("#funds_transfer_customer_action_limit_breach").prop("disabled", false);

      } 
      else{
        $("#funds_transfer_customer_working_day_limit").val('');
        $("#funds_transfer_customer_non_working_day_limit").val('');
         $("#funds_transfer_customer_action_limit_breach").val('');

        $("#funds_transfer_customer_working_day_limit").prop("disabled", true);
        $("#funds_transfer_customer_non_working_day_limit").prop("disabled", true);
         $("#funds_transfer_customer_action_limit_breach").prop("disabled", true);
      }
    });


    $('.numbers').keyup(function () { 
    this.value = this.value.replace(/[^0-9\.]/g,'');
    });